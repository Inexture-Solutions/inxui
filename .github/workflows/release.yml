name: Release

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Build, Release, Tag & Branch
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_INX_UI_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      GITHUB_TOKEN: ${{ secrets.ORG_INX_UI_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_INX_UI_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.ORG_INX_UI_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Cache Turbo Build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Configure NPM Authentication
        run: npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_INX_UI_TOKEN }}

      - name: Build Changed Packages
        run: pnpm turbo run build --filter=...[HEAD^1]

      - name: Check for Changes
        id: changes_check
        run: |
          git fetch origin main
          git diff --quiet origin/main HEAD || echo "Changes detected."
        continue-on-error: true

      - name: Skip if No Changes
        if: ${{ failure() }}
        run: echo "No changes detected, skipping release creation."

      - name: Create Tag for Release
        id: create_tag
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const latestTag = `v${new Date().toISOString().replace(/[-:]/g, "").slice(0, 8)}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${latestTag}`,
              sha: context.sha,
            });
            core.setOutput("tag_name", latestTag);
            console.log(`Created tag: ${latestTag}`);

      - name: Create Release Branch
        id: create_branch
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const tagName = "${{ steps.create_tag.outputs.tag_name }}";
            const branchName = `release-${tagName}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branchName}`,
              sha: context.sha,
            });
            core.setOutput("branch_name", branchName);
            console.log(`Created branch: ${branchName}`);

      - name: Create Pull Request
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = "${{ steps.create_branch.outputs.branch_name }}";
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${branchName}`,
              head: branchName,
              base: "main",
              body: "This PR is for the release of the latest changes in `release-${branchName}`.",
            });
            console.log(`Opened pull request for ${branchName}`);

  publish:
    name: Publish Packages on Merge
    runs-on: ubuntu-latest
    needs: release
    if: github.event.pull_request.merged == true
    env:
      NPM_TOKEN: ${{ secrets.NPM_INX_UI_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.ORG_INX_UI_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install

      - name: Run Release Script
        run: pnpm run release
        env:
          NPM_TOKEN: ${{ secrets.NPM_INX_UI_TOKEN }}
